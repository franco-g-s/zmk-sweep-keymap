// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Home row mods macro
#define HRML(k2,k3,k4) &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3

#define CMK 0
#define QWR 1
#define LEF 2
#define RIG 3
#define TRI 4

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮        ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  F       │  P       │  G       │        │  J       │  L       │  U       │  Y       │  ;       │
            &kp Q      &kp W      &kp F      &kp P      &kp G               &kp J      &kp L      &kp U      &kp Y      &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  R       │  S       │  T       │  D       │        │  H       │  N       │  E       │  I       │  O       │
            &kp A     HRML(R,         S,         T)     &kp D               &kp H      HRMR(N,        E,           I)   &kp O
        //├──────────┼──────────┼──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │        │  K       │  M       │ , <      │ . >      │  /       │
            &kp Z      &kp X      &kp C      &kp V      &kp B               &kp K      &kp M      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                         &lt LEF TAB  &lt LSHIFT BSPC      &kp SPACE  &lt RIG ENTER
        //                                 ╰──────────┴──────────╯        ╰──────────┴──────────╯
            >;
        };

        qwerty_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮        ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │        │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T               &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │        │  H       │  J       │  K       │  L       │  ;       │
            &kp A     HRML(S,         D,         F)     &kp G               &kp H       HRMR(J,        K,         L)   &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │        │  N       │  M       │ , <      │ . >      │  /       │
            &kp Z      &kp X      &kp C      &kp V      &kp B               &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                           &lt LEF TAB  &lt LSHIFT BSPC    &kp SPACE  &lt RIG ENTER
        //                                 ╰──────────┴──────────╯        ╰──────────┴──────────╯
            >;
        };

        left_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮        ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ ESC      │          │  UP      │          │          │        │          │ 7        │ 8        │ 9        │          │
            &kp ESC    &trans    &kp UARW     &trans     &trans              &trans    &kp N7     &kp N8     &kp N9      &trans 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CapsLock │ LEFT     │ DOWN     │ RIGHT    │          |        |          │ 4        │ 5        │ 6        │  0       │
            &kp CAPS   &kp LARW   &kp DARW  &kp RARW    &trans              &trans    &kp N4      &kp N5      &kp N6    &kp N0 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │        │          │ 1        │ 2        │ 3        │          │
            &trans    &trans     &trans     &trans      &trans              &trans     &kp N1     &kp N2     &kp N3     &trans 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans              &trans     &trans
        //                                 ╰──────────┴──────────╯        ╰──────────┴──────────╯
            >;
        };

        right_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮        ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  !       │  @       │  #       │  $       │  %       │        │  ^       │  &       │  *       │  -       │  =       │
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT           &kp CARET  &kp AMPS   &kp ASTRK  &kp MINUS  &kp EQUAL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  \       │          │  [       │  ]       │          │        │          │   (      │  )       │          │  '       │
            &kp BSLH   &trans     &kp LBKT   &kp RBKT   &trans              &trans    &kp LPAR   &kp RPAR   &trans      &kp SQT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │        │          │          │          │          │          │
            &trans     &trans      &trans     &trans     &trans             &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤        ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans              &trans     &trans
        //                                 ╰──────────┴──────────╯        ╰──────────┴──────────╯
            >;
        };

        tri_layer {
            bindings = <
        //╭───────────┬───────────┬───────────┬───────────┬────────────╮        ╭────────────┬────────────┬──────────┬───────────┬──────────╮
        //│  QWERTY   │ PREVIOUS  │ PAUSE     │ NEXT      │ VOL UP     │        │ INC BRIGHT │ F9         │ F10      │ F11       │ F12      │
            &tog QWR    &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp C_VOL_UP         &kp C_BRI_UP  &kp F9       &kp F10    &kp F11     &kp F12
        //├───────────┼───────────┼───────────┼───────────┼────────────┤        ├────────────┼────────────┼──────────┼───────────┼──────────┤
        //│ PROFILE 0 │ PROFILE 1 │ PROFILE 2 │ PROFILE 3 │ VOL DOWN   │        │ DEC BRIGHT │  F5        │ F6       │ F7        │ F8       │
            &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &kp C_VOL_DN     &kp C_BRI_DEC  &kp F5      &kp F6     &kp F7      &kp F8
        //├───────────┼───────────┼───────────┼───────────┼────────────┤        ├────────────┼────────────┼──────────┼───────────┼──────────┤
        //│           │           │           │           │ VOL MUTE   │        │            │ F1         │ F2       | F3        │ F4       │
            &trans       &trans     &trans      &trans      &kp C_MUTE            &trans       &kp F1       &kp F2    &kp F3       &kp F4
        //╰───────────┴───────────┴───────────┼───────────┼────────────┤        ├────────────┼────────────┼──────────┴───────────┴──────────╯
                                                  &trans     &trans              &trans     &trans
        //                                       ╰──────────┴──────────╯        ╰──────────┴────────────╯
            >;
        };
    };
};
